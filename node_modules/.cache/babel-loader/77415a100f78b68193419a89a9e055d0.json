{"ast":null,"code":"import _slicedToArray from \"/Users/vilakkapat/Documents/test-64-q-8040d852cd4745e8a128481e7cc0c3a7-61563-react-16.9-yarn-in-docker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vilakkapat/Documents/test-64-q-8040d852cd4745e8a128481e7cc0c3a7-61563-react-16.9-yarn-in-docker/src/HomeScreen/HomeScreenView.js\";\nimport React, { useState, useEffect } from \"react\";\nimport renderIf from 'render-if';\nimport { AddLeadButton } from './components/Buttons';\nimport LeadsTable from './components/LeadsTable';\nimport { fetchLeadsList } from './HomeScreenService';\nimport './HomeScreenStyles.css';\nexport const HomeScreenView = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        leadsList = _useState2[0],\n        setLeadsList = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isAddLeadModalOpen = _useState4[0],\n        toggleAddLeadModalOpen = _useState4[1];\n\n  useEffect(() => {\n    fetchLeadsList().then(data => setLeadsList(data)).catch(error => console.log(\"Error from fetchLeadsList\", error));\n  }, []);\n  const renderIfAddLeadModalOpen = renderIf(toggleAddLeadModalOpen);\n  return React.createElement(\"div\", {\n    className: \"mainContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(AddLeadButton, {\n    handleOnClickAddLeadButton: () => toggleAddLeadModalOpen(!isAddLeadModalOpen),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(LeadsTable, {\n    leadsList: leadsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/vilakkapat/Documents/test-64-q-8040d852cd4745e8a128481e7cc0c3a7-61563-react-16.9-yarn-in-docker/src/HomeScreen/HomeScreenView.js"],"names":["React","useState","useEffect","renderIf","AddLeadButton","LeadsTable","fetchLeadsList","HomeScreenView","leadsList","setLeadsList","isAddLeadModalOpen","toggleAddLeadModalOpen","then","data","catch","error","console","log","renderIfAddLeadModalOpen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,OAAO,wBAAP;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA,oBACAN,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,QAC3BO,SAD2B;AAAA,QAChBC,YADgB;;AAAA,qBAEmBR,QAAQ,CAAC,KAAD,CAF3B;AAAA;AAAA,QAE3BS,kBAF2B;AAAA,QAEPC,sBAFO;;AAIlCT,EAAAA,SAAS,CAAC,MAAM;AAChBI,IAAAA,cAAc,GACZM,IADF,CACQC,IAAD,IAAUJ,YAAY,CAACI,IAAD,CAD7B,EAEEC,KAFF,CAESC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC,CAFnB;AAGA,GAJS,EAIP,EAJO,CAAT;AAOA,QAAMG,wBAAwB,GAAGf,QAAQ,CAACQ,sBAAD,CAAzC;AACA,SACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AACC,IAAA,0BAA0B,EAAE,MAC3BA,sBAAsB,CAAC,CAACD,kBAAF,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADA;AAUD,CAtBM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport renderIf from 'render-if'\n\nimport { AddLeadButton } from './components/Buttons'\nimport LeadsTable from './components/LeadsTable'\n\nimport { fetchLeadsList } from './HomeScreenService'\n\nimport './HomeScreenStyles.css'\n\nexport const HomeScreenView = () => {\n  const [leadsList, setLeadsList] = useState([])\n  const [isAddLeadModalOpen, toggleAddLeadModalOpen] = useState(false)\n\n  useEffect(() => {\n\t\tfetchLeadsList()\n\t\t\t.then((data) => setLeadsList(data))\n\t\t\t.catch((error) => console.log(\"Error from fetchLeadsList\", error));\n\t}, []);\n\n\n  const renderIfAddLeadModalOpen = renderIf(toggleAddLeadModalOpen)\n  return (\n\t\t<div className=\"mainContainer\">\n\t\t\t<AddLeadButton\n\t\t\t\thandleOnClickAddLeadButton={() =>\n\t\t\t\t\ttoggleAddLeadModalOpen(!isAddLeadModalOpen)\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<LeadsTable leadsList={leadsList} />\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}